From 6d1a6c5f41ab69fd976dbc2bcd2f71a0e7e77ccf Mon Sep 17 00:00:00 2001
From: Gaurav Pathak <gauravpathak129@gmail.com>
Date: Wed, 5 Feb 2020 13:07:45 +0530
Subject: [PATCH] Changes for Task-14

Modifications Done for adding id variable in task_struct

Signed-off-by: Gaurav Pathak <gauravpathak129@gmail.com>
---
 fs/proc/base.c        | 12 ++++++++++++
 include/linux/sched.h |  4 +++-
 init/init_task.c      |  1 +
 kernel/fork.c         |  2 ++
 4 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/fs/proc/base.c b/fs/proc/base.c
index 81d77b15b347..46d763572389 100644
--- a/fs/proc/base.c
+++ b/fs/proc/base.c
@@ -2901,6 +2901,17 @@ static int proc_pid_patch_state(struct seq_file *m, struct pid_namespace *ns,
 }
 #endif /* CONFIG_LIVEPATCH */
 
+static int proc_pid_idread(struct seq_file *m, struct pid_namespace *ns,
+		struct pid *pid, struct task_struct *task)
+{
+	int err = lock_trace(task);
+
+	if (!err) {
+		seq_printf(m, "%lx\n", task->myid++);
+		unlock_trace(task);
+	}
+	return err;
+}
 /*
  * Thread groups
  */
@@ -3002,6 +3013,7 @@ static const struct pid_entry tgid_base_stuff[] = {
 #ifdef CONFIG_LIVEPATCH
 	ONE("patch_state",  S_IRUSR, proc_pid_patch_state),
 #endif
+	ONE("id", 0444, proc_pid_idread),
 };
 
 static int proc_tgid_base_readdir(struct file *file, struct dir_context *ctx)
diff --git a/include/linux/sched.h b/include/linux/sched.h
index 4abb5bd74b04..1841a76e2c4c 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -210,6 +210,8 @@ extern void scheduler_tick(void);
 
 #define	MAX_SCHEDULE_TIMEOUT		LONG_MAX
 
+#define MY_ID	(0x823daa4ac90a)
+
 extern long schedule_timeout(long timeout);
 extern long schedule_timeout_interruptible(long timeout);
 extern long schedule_timeout_killable(long timeout);
@@ -1192,7 +1194,7 @@ struct task_struct {
 	/* Used by LSM modules for access restriction: */
 	void				*security;
 #endif
-
+	unsigned long myid;
 	/*
 	 * New fields for task_struct should be added above here, so that
 	 * they are included in the randomized portion of task_struct.
diff --git a/init/init_task.c b/init/init_task.c
index 5aebe3be4d7c..40d7b4e6bbfc 100644
--- a/init/init_task.c
+++ b/init/init_task.c
@@ -121,6 +121,7 @@ struct task_struct init_task
 	.thread_pid	= &init_struct_pid,
 	.thread_group	= LIST_HEAD_INIT(init_task.thread_group),
 	.thread_node	= LIST_HEAD_INIT(init_signals.thread_head),
+	.myid = 0,
 #ifdef CONFIG_AUDITSYSCALL
 	.loginuid	= INVALID_UID,
 	.sessionid	= AUDIT_SID_UNSET,
diff --git a/kernel/fork.c b/kernel/fork.c
index 64ef113e387e..f6c9ea9cdb2d 100644
--- a/kernel/fork.c
+++ b/kernel/fork.c
@@ -1720,6 +1720,8 @@ static __latent_entropy struct task_struct *copy_process(
 	 */
 	p->clear_child_tid = (clone_flags & CLONE_CHILD_CLEARTID) ? child_tidptr : NULL;
 
+	p->myid = MY_ID;
+
 	ftrace_graph_init_task(p);
 
 	rt_mutex_init_task(p);
-- 
2.17.1

